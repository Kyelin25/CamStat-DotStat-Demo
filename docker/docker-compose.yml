version: "3"

volumes:
  postgres_data:
  redis-data:
  db-data:
  wait-tool:
  
services:
  solr:
    image: solr:7.7.2
    container_name: solr
    entrypoint:
    - bash
    - "-c"
    - "precreate-core sdmx-facet-search; exec solr -f"
    ports:
      - "${SOLR_PORT}:8983"
  
  redis:
    image: redis:5.0.3
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
  
  postgres:
    image: postgres:12.0
    container_name: postgres
    restart: always    
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"

  keycloak:
    image: jboss/keycloak:7.0.0
    container_name: keycloak
    environment:
      DB_VENDOR: ${DB_VENDOR}
      DB_ADDR: ${DB_ADDR}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - "${KEYCLOAK_PORT}:8080"
    depends_on:
      - postgres

  config: 
    container_name: config
    build:
      context: .././config
      dockerfile: Dockerfile.dev
    ports:
      - "${CONFIG_PORT}:80"

  data-lifecycle-manager:
    image: siscc/dotstatsuite-data-lifecycle-manager:master
    container_name: data-lifecycle-manager-test
    ports:
      - "${DLM_PORT}:7002"
    environment:
      DEFAULT_TENANT: ${DEFAULT_TENANT}
      CONFIG_URL: http://config
      AUTH_SERVER_URL: "${PROTOCOL}://${HOST}:${KEYCLOAK_PORT}"
      TRANSFER_SERVER_URL: "${PROTOCOL}://${HOST}:${TRANSFER_PORT}/${TRANSFER_API_VERSION}"

  data-explorer:
    image: siscc/dotstatsuite-data-explorer:master
    container_name: data-explorer
    ports:
      - "${DE_PORT}:80"
    environment:
      CONFIG_URL: http://config
      AUTH_SERVER_URL: "${PROTOCOL}://${HOST}:${KEYCLOAK_PORT}"

  share:
    image: siscc/dotstatsuite-share
    container_name: share
    ports:
      - "${SHARE_PORT}:3007"
    environment:
      CONFIG_URL: http://config
      SFS_URL: "${PROTOCOL}://${HOST}:${SFS_PORT}"
      SITE_URL: "${PROTOCOL}://${HOST}:${SHARE_PORT}"
      REDIS_HOST: redis
      REDIS_PORT: 6379

  data-viewer:
    image: siscc/dotstatsuite-data-viewer:master
    container_name: data-viewer
    ports:
      - "${VIEWER_PORT}:80"
    environment:
      CONFIG_URL:  http://config

  sdmx-faceted-search:
    image: siscc/dotstatsuite-sdmx-faceted-search:master
    container_name: sdmx-faceted-search
    ports:
      - "${SFS_PORT}:80"
    depends_on:
      - solr
    environment:
      PORT: ${SFS_PORT}
      SERVER_HOST: ${HOST}
      CONFIG_URL: http://localhost:${CONFIG_PORT}
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      SOLR_HOST: localhost
      SOLR_PORT: 8983
    network_mode: host
    entrypoint:
      - sh
      - -c
      - "sleep 30s; yarn dist:run"

  nsiws-stable:
    image: siscc/dotstatsuite-core-sdmxri-nsi
    container_name: nsiws-stable
    ports:
      - "${NSI_STABLE_PORT}:80"
    environment:
        auth__Enabled: "true"
        auth__authority: http://keycloak:8080/auth/realms/OECD
        auth__clientId: app
        auth__requireHttps: "false"
        auth__validateIssuer: "false" 
        auth__claimsMapping__email: email
        auth__claimsMapping__groups: groups
        auth__allowAnonymous: "true"
        DotStatSuiteCoreCommonDbConnectionString: Server=db;Database=${COMMON_DB};User=${COMMON_DB_USER};Password=${COMMON_DB_PWD};
        SpacesInternal__0__Id: CamStat-stable
        SpacesInternal__0__DotStatSuiteCoreStructDbConnectionString: Server=db;Database=${STRUCT_DB_STABLE};User=${STRUCT_DB_STABLE_USER};Password=${STRUCT_DB_STABLE_PWD};            
        SpacesInternal__0__DotStatSuiteCoreDataDbConnectionString: Server=db;Database=${DATA_DB_STABLE};User=${DATA_DB_STABLE_USER};Password=${DATA_DB_STABLE_PWD};
        SpacesInternal__0__DataImportTimeOutInMinutes: 2
        SpacesInternal__0__DatabaseCommandTimeoutInSec: 60   
        SpacesInternal__0__AuthEndpoint: auth-service
        SpacesInternal__0__AutoLog2DB: "true"
        SpacesInternal__0__AutoLog2DBLogLevel: "Notice"
        SQL_SERVER: db
        SQL_DATABASE: ${STRUCT_DB_STABLE}
        SQL_USER: ${STRUCT_DB_STABLE_USER}
        SQL_PASSWORD: ${STRUCT_DB_STABLE_PWD}      
        SENDER_ID: "Stable - DotStat v8"
        DATASPACE_ID: CamStat-stable            
        MA_DB_VERSION: 6.7
        MA_SQL_USER: sa
        MA_SQL_PASSWORD: ${SA_PASSWORD}
        #Persist
        MA_ALWAYS_RESET: N
        INSERT_NEW_ITEM_SCHEME_VALUES: "false"
    depends_on: 
      - auth-service
      - dbup-struct-stable
    volumes:
      - "./logs:/app/logs" 
      - wait-tool:/tool
    entrypoint: bash -c "/tool/wait4sql db '${STRUCT_DB_STABLE_USER}' '${STRUCT_DB_STABLE_PWD}' '${STRUCT_DB_STABLE}' && ./entrypoint.sh"          
        
  transfer-service:
      image: siscc/dotstatsuite-core-transfer
      container_name: transfer-service
      environment:
          auth__Enabled: "true"
          auth__authority: http://keycloak:8080/auth/realms/OECD
          auth__clientId: app
          auth__authorizationUrl: http://${KEYCLOAK_HOST}:${KEYCLOAK_HTTP_PORT}/auth/realms/OECD/protocol/openid-connect/auth
          auth__scopes__0: openid
          auth__scopes__1: profile
          auth__scopes__2: email
          auth__claimsMapping__email: email
          auth__claimsMapping__groups: groups
          auth__requireHttps: "false"
          auth__validateIssuer: "false"
          MaxTransferErrorAmount: 0 
          DefaultLanguageCode: en
          SmtpHost: ${SMTP_HOST}
          SmtpPort: ${SMTP_PORT}
          SmtpEnableSsl: ${SMTP_SSL}
          SmtpUserName: ${SMTP_USER}
          SmtpUserPassword: ${SMTP_PASSWORD}
          MailFrom: noreply@dlm.org
          MaxTextAttributeLength: 150
          DotStatSuiteCoreCommonDbConnectionString: Server=db;Database=${COMMON_DB};User=${COMMON_DB_USER};Password=${COMMON_DB_PWD};
          SpacesInternal__0__Id: CamStat-stable
          SpacesInternal__0__DotStatSuiteCoreStructDbConnectionString: Server=db;Database=${STRUCT_DB_STABLE};User=${STRUCT_DB_STABLE_USER};Password=${STRUCT_DB_STABLE_PWD};
          SpacesInternal__0__DotStatSuiteCoreDataDbConnectionString: Server=db;Database=${DATA_DB_STABLE};User=${DATA_DB_STABLE_USER};Password=${DATA_DB_STABLE_PWD}; 
          SpacesInternal__0__DataImportTimeOutInMinutes: 2
          SpacesInternal__0__DatabaseCommandTimeoutInSec: 60
          SpacesInternal__0__AutoLog2DB: "true"
          SpacesInternal__0__AutoLog2DBLogLevel: "Notice"
      volumes:
        - "./logs:/app/logs" 
      ports:
        - "${TRANSFER_PORT}:80"
      depends_on: 
        - auth-service
        - dbup-data-stable
        - dbup-struct-stable
            
  auth-service:
      image: siscc/dotstatsuite-core-auth-management
      container_name: auth-service
      environment:
          auth__enabled: "true"
          auth__authority: http://keycloak:8080/auth/realms/OECD
          auth__clientId: app
          auth__authorizationUrl: http://${KEYCLOAK_HOST}:${KEYCLOAK_HTTP_PORT}/auth/realms/OECD/protocol/openid-connect/auth
          auth__scopes__0: openid
          auth__scopes__1: profile
          auth__scopes__2: email
          auth__claimsMapping__email: email
          auth__claimsMapping__groups: groups
          auth__requireHttps: "false"
          auth__validateIssuer: "false"
          DotStatSuiteCoreCommonDbConnectionString: Server=db;Database=${COMMON_DB};User=${COMMON_DB_USER};Password=${COMMON_DB_PWD};
      volumes:
        - "./logs:/app/logs" 
      ports:
        - "${AUTH_PORT}:80"
      depends_on: 
        - dbup-common

  dbup-struct-stable:
      image: siscc/dotstatsuite-dbup
      container_name: dbup-struct-stable
      environment:
          EXECUTION_PARAMETERS: upgrade --connectionString Server=db;Database=${STRUCT_DB_STABLE};User=sa;Password=${SA_PASSWORD}; --mappingStoreDb --loginName ${STRUCT_DB_STABLE_USER} --loginPwd ${STRUCT_DB_STABLE_PWD} --force 
      depends_on: 
        - db
      volumes:
        - wait-tool:/tool
      entrypoint: bash -c "/tool/wait4sql db sa ${SA_PASSWORD} && dotnet DotStat.DbUp.dll $$EXECUTION_PARAMETERS"
      
  dbup-data-stable:
      image: siscc/dotstatsuite-dbup
      container_name: dbup-data-stable
      environment:
          EXECUTION_PARAMETERS: upgrade --connectionString Server=db;Database=${DATA_DB_STABLE};User=sa;Password=${SA_PASSWORD}; --dataDb --loginName ${DATA_DB_STABLE_USER} --loginPwd ${DATA_DB_STABLE_PWD} --force 
      depends_on: 
        - db
      volumes:
        - wait-tool:/tool
      entrypoint: bash -c "/tool/wait4sql db sa ${SA_PASSWORD} && dotnet DotStat.DbUp.dll $$EXECUTION_PARAMETERS"
        
  dbup-common:
      image: siscc/dotstatsuite-dbup
      container_name: dbup-common
      depends_on: 
        - db
      environment:
          EXECUTION_PARAMETERS: upgrade --connectionString Server=db;Database=${COMMON_DB};User=sa;Password=${SA_PASSWORD}; --commonDb --loginName ${COMMON_DB_USER} --loginPwd ${COMMON_DB_PWD} --force          
      volumes:
        - wait-tool:/tool          
      entrypoint: bash -c "/tool/wait4sql db sa ${SA_PASSWORD} && dotnet DotStat.DbUp.dll $$EXECUTION_PARAMETERS"
  
  db:
      image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu 
      container_name: mssql
      ports:
        - "${SQL_PORT}:1433"
      environment:
        - SA_PASSWORD=${SA_PASSWORD}
        - MSSQL_PID=Developer
        - ACCEPT_EULA=Y
      depends_on: 
        - wait  
      volumes:
        - "db-data:/var/opt/mssql/data"          

  wait: 
    image: vigurous/wait4sql
    container_name: wait4sql
    volumes:
      - wait-tool:/tool
